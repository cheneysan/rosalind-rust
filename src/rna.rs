/*
Transcribing DNA into RNA
https://rosalind.info/problems/rna/
*/

fn transcribe(dna: &str) -> Result<String, String> {
    let mut rna = String::new();
    for nucleotide in dna.chars() {
        let next = match nucleotide {
            'A' => Ok('A'),
            'C' => Ok('C'),
            'G' => Ok('G'),
            'T' => Ok('U'),
            other => Err(format!("invalid nucleotide: '{}'", other))
        };
        rna.push(next?);
    }
    Ok(rna)
}

#[cfg(test)]
mod tests {
    use crate::rna::transcribe;

    #[test]
    fn it_works() {
        let sample = "GATGGAACTTGACTACGTAAATT";
        let expected = "GAUGGAACUUGACUACGUAAAUU";
        assert_eq!(expected, transcribe(sample).unwrap());
    }

    #[test]
    fn actual_dataset() {
        let dna = "ACGCAGAAACAACTGGGTTATCAATACGTCTAAGCTCACTCTCGGGTTTGTCAGGCTTCTACTAACGTACTGTTAGAGATCGTTTGAACAGACCTGCCGCTGTCGATCCGACAACTGCCAATGCTGATCCGGGCGATTTAAGCCGTGGGTTTCGGGTTCGGAATATCGTACCGGTCATTCGCTGCCTTTCTGCGTGCGTAGGATTCGCTGTATAAGAGTAGTCGCCGGGATTCCGTTTCCCCCCCGGCCTCGCTGTAAGCGTTCACGCCGTCTAGACTATAGACAACCGTATCGCACTAAAGTTCTTATGATCAGCGCGTACTAACGTACAGTAGCGATGCTATCAATCGTTCACGGTAAACTGCTTGCGTGATTTACGCCTATCGAGTCGAAGTCGAGATGGTATGGAGTTTGTATAAGATCCCCGCTAATCGATGGGCGGGAGAATACCTGTCCAAAGGACCTGTAAGTCTTCCTAGGCTATTTAATAAAGGCGTGCCGGATTTACTTCTTGAAAGTCTGCCTTGAGGTAGTATTGTAAGTAGCTTCAACCTTATTGGGCCTCGCTCACCAGACAATGCAGCTTCTAGTTCCCGGACCTTCAATGCCGTATATACAAGATTTGGCTATAAGTCGGCAAGACATCCAGAGACATAACTGACAAGCAGGAACCGACGGATTTACTCCTCGCCCGCAAGGTGCAAGGATACACCCGAAGCAAACCCGCTTTTGTAAAAATAGAGTTCCATTTTGAGACCTTTTTGGGCTTGTTAAAAGCCTATCGGACGAGTCTTGACCCAAAATTCCCGGTATGCGTAGCAAGGATCGTTCAAGTGAGTTCCATCGCAGCTAAAACAGCCGTCGAAACTCTGGTAATAAATCGATTCTTAGATTGGGCGAG";
        println!("{}", transcribe(dna).unwrap());
        // Correct answer:
        // ACGCAGAAACAACUGGGUUAUCAAUACGUCUAAGCUCACUCUCGGGUUUGUCAGGCUUCUACUAACGUACUGUUAGAGAUCGUUUGAACAGACCUGCCGCUGUCGAUCCGACAACUGCCAAUGCUGAUCCGGGCGAUUUAAGCCGUGGGUUUCGGGUUCGGAAUAUCGUACCGGUCAUUCGCUGCCUUUCUGCGUGCGUAGGAUUCGCUGUAUAAGAGUAGUCGCCGGGAUUCCGUUUCCCCCCCGGCCUCGCUGUAAGCGUUCACGCCGUCUAGACUAUAGACAACCGUAUCGCACUAAAGUUCUUAUGAUCAGCGCGUACUAACGUACAGUAGCGAUGCUAUCAAUCGUUCACGGUAAACUGCUUGCGUGAUUUACGCCUAUCGAGUCGAAGUCGAGAUGGUAUGGAGUUUGUAUAAGAUCCCCGCUAAUCGAUGGGCGGGAGAAUACCUGUCCAAAGGACCUGUAAGUCUUCCUAGGCUAUUUAAUAAAGGCGUGCCGGAUUUACUUCUUGAAAGUCUGCCUUGAGGUAGUAUUGUAAGUAGCUUCAACCUUAUUGGGCCUCGCUCACCAGACAAUGCAGCUUCUAGUUCCCGGACCUUCAAUGCCGUAUAUACAAGAUUUGGCUAUAAGUCGGCAAGACAUCCAGAGACAUAACUGACAAGCAGGAACCGACGGAUUUACUCCUCGCCCGCAAGGUGCAAGGAUACACCCGAAGCAAACCCGCUUUUGUAAAAAUAGAGUUCCAUUUUGAGACCUUUUUGGGCUUGUUAAAAGCCUAUCGGACGAGUCUUGACCCAAAAUUCCCGGUAUGCGUAGCAAGGAUCGUUCAAGUGAGUUCCAUCGCAGCUAAAACAGCCGUCGAAACUCUGGUAAUAAAUCGAUUCUUAGAUUGGGCGAG
    }
}